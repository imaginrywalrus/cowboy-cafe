@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}
@using CowboyCafe.Data;
<!--
Welcome message from Cowboy Cafe-->
<div class="Welcome">
    <h1>Cowboy Cafe</h1>
    <p>
        We at Cowboy Cafe are proud to bring you authentic trail meals from the American West. Shake off the
        dust on your boots and sake your thirst with one of our old-fashioned hand-jerked sodas. Dip your Pan de
        Campo into a bowl of beans. Or conquer the the mighty Texas Triple Burger! You’ve had a hard ride - so
        take it easy with us.
    </p>
</div>

<form id="cowboy-menu">

    <div id="search">
        <input type="text" name="SearchTerms" value="@Model.SearchTerms" />
        <input type="submit" value="Search">
    </div>

    <div id="filters">
        <h4>Category</h4>
        <label>
            <input type="checkbox" name="category" value="Entree" checked="@Model.category.Contains("Entree")" />
            Entree
        </label>
        <label>
            <input type="checkbox" name="category" value="Side" checked="@Model.category.Contains("Side")" />
            Side
        </label>
        <label>
            <input type="checkbox" name="category" value="Drink" checked="@Model.category.Contains("Drink")" />
            Drink
        </label>

        <h4>Prices</h4>
        <div>
            Between
            <input name="priceMin" type="number" min="0" max="10" step="0.1" placeholder="min" />
            and
            <input name="priceMax" type="number" min="0" max="10" step="0.1" placeholder="max" />
        </div>

        <h4>Calories</h4>
        <div>
            Between
            <input name="caloriesMin" type="number" min="0" max="1000" step="1" placeholder="min" />
            and
            <input name="caloriesMax" type="number" min="0" max="1000" step="1" placeholder="max" />
        </div>
    </div>

    <div class="flex-columns">
        <div class="Entree">
            @foreach (IOrderItem item in Model.Menus)
            {
                if (item is Entree)
                {
                    <div class="menu-item">
                        <h3>@item</h3>
                        <div>@string.Format("{0:C}", item.Price)</div>
                        <div>@(item.Calories) Calories</div>
                    </div>
                }
            }
        </div>

        <div class="Side">
            @foreach (IOrderItem item in Model.Menus)
            {
                if (item is Side)
                {
                    foreach (Size s in (Size[])Enum.GetValues(typeof(Size)))
                    {

                        <div class="menu-item">
                            <div style="display: none">@(((Side)item).Size = s)</div>
                            <h3>@item</h3>
                            <div>@string.Format("{0:C}", item.Price)</div>
                            <div>@(item.Calories) Calories</div>
                        </div>
                    }
                }
            }
        </div>

        <div class="Drink">
            @foreach (IOrderItem item in Model.Menus)
            {
                if (item is Drink)
                {
                    foreach (Size s in (Size[])Enum.GetValues(typeof(Size)))
                    {
                        <div class="menu-item">
                            <div style="display: none">@(((Drink)item).Size = s)</div>
                            <h3>@item</h3>
                            <div>@string.Format("{0:C}", item.Price)</div>
                            <div>@(item.Calories) Calories</div>
                        </div>
                    }

                    if (item is JerkedSoda)
                    {
                        <h3>Soda Flavors</h3>
                        foreach (SodaFlavor flavor in Enum.GetValues(typeof(SodaFlavor)))
                        {
                            <div>@flavor</div>
                        }
                    }
                }
            }
        </div>
    </div>
</form>
